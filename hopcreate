#!/bin/bash

# script for creating new MP entries for Wikidata from HoP items which are known not to exist

# requirement - source.tsv, which includes the following columns:
# 1 - HoP URL - only one for now
# 2 - name (if blank, will guess)
# 3 - parliamentary body ("UK", "GB", "ENG")
# 4 - born - "unk" unknown - 1800 (no day support yet)
# 5 - died - "unk" unknown - 1800 (no day support yet)
# 6 - second HoP URL if present
# 7 - third HoP URL if present

# it then produces a file suitable to be sent to http://tools.wmflabs.org/wikidata-todo/quick_statements.php

ENTRIES=`cat source.tsv | wc -l`

echo $ENTRIES records to create

rm quickstatements

# make sure it's cleaned up from a previous run

for i in `seq 1 $ENTRIES` ; 
do echo CREATE >> quickstatements ;
echo -e LAST"\t"P31"\t"Q5 >> quickstatements ;
echo -e LAST"\t"P21"\t"Q6581097 >> quickstatements ; # note this is hardcoded - all HoP entries are male!
echo -e LAST"\t"P1614"\t"\"`sed "${i}q;d" source.tsv | cut -f 1`\" >> quickstatements ;
echo -e LAST"\t"P39"\t"`sed "${i}q;d" source.tsv | cut -f 3 | sed 's/ENG/Q18018860/' | sed 's/GB/Q18015642/' | sed 's/UK/Q16707842/' `>> quickstatements ;
if [ -z "`sed "${i}q;d" source.tsv | cut -f 4 | grep \-`" ] ; then #this if loop sees if it has a hyphen, ie is day or just year
echo -e LAST"\t"P569"\t"+`sed "${i}q;d" source.tsv | cut -f 4`\-00\-00T00\:00\:00Z\/09 | sed 's/+unk-00-00T00:00:00Z\/09/no value/' >> quickstatements; 
else
echo -e LAST"\t"P569"\t"+`sed "${i}q;d" source.tsv | cut -f 4`T00\:00\:00Z\/11 >> quickstatements; 
fi
if [ -z "`sed "${i}q;d" source.tsv | cut -f 5 | grep \-`" ] ; then
echo -e LAST"\t"P570"\t"+`sed "${i}q;d" source.tsv | cut -f 5`\-00\-00T00\:00\:00Z\/09 | sed 's/+unk-00-00T00:00:00Z\/09/no value/' >> quickstatements; 
else
echo -e LAST"\t"P570"\t"+`sed "${i}q;d" source.tsv | cut -f 5`T00\:00\:00Z\/11 >> quickstatements; 
fi
echo -e LAST"\t"Den"\t"\"`sed "${i}q;d" source.tsv | cut -f 3 | sed 's/ENG/English/' | sed 's/GB/British/' | sed 's/UK/United Kingdom/' ` Member of Parliament\" >> quickstatements; 
NAME=`sed "${i}q;d" source.tsv | cut -f 2`
if [ -z "`sed "${i}q;d" source.tsv | cut -f 2`" ] ; then
echo -e LAST"\t"Len"\t"\"`sed "${i}q;d" source.tsv | cut -f 1 | cut -d / -f 3 | cut -d \- -f 2 | sed 's/^\(.\)/\U\1/'` `sed "${i}q;d" source.tsv | cut -f 1 | cut -d / -f 3 | cut -d \- -f 1 | sed 's/^\(.\)/\U\1/'`\" >> quickstatements;
else
echo -e LAST"\t"Len"\t"\"`sed "${i}q;d" source.tsv | cut -f 2`\" >> quickstatements; 
fi
if [ -n "`sed "${i}q;d" source.tsv | cut -f 6`" ] ; then
echo -e LAST"\t"P1614"\t"\"`sed "${i}q;d" source.tsv | cut -f 6`\" >> quickstatements ;
fi
if [ -n "`sed "${i}q;d" source.tsv | cut -f 7`" ] ; then
echo -e LAST"\t"P1614"\t"\"`sed "${i}q;d" source.tsv | cut -f 7`\" >> quickstatements ;
fi
done

# note that the name guessing code only works for the simplest case - /smith-john, no dates

# still need to do:

# support for unknown dates - "no value" doesn't currently do anything
# add dates into description field


# demo line for testing: 
# 1386-1421/member/abbotsley-john   John Abbotsle	ENG	unk	unk
